name: Compilation & tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build 1inch plugin
        run: |
          make DEBUG=1

      - name: Upload 1inch binary
        uses: actions/upload-artifact@v2
        with:
          name: 1inch-app-debug
          path: bin

  job_scan_build:
    name: Clang Static Analyzer
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_coverity_scan:
    name: Coverity Scan
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-scanner:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with cov-build
        run: |
          make clean
          cov-build --dir cov-int make default
      - name: Submit the result to Coverity Scan
        run: |
          tar czvf cov-int.tar.gz cov-int
          curl \
            --form token=$TOKEN \
            --form email=$EMAIL \
            --form file=@cov-int.tar.gz \
            --form version=master \
            --form description="1inch Plugin" \
            https://scan.coverity.com/builds?project=LedgerHQ%2Fapp-plugin-1inch
        env:
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
