name: Compilation & tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  job_build_debug_nano_s:
    name: Build debug Nano S
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build plugin for Nano S
        run: |
          make BOLOS_SDK=$NANOS_SDK DEBUG=1
          mv bin/app.elf plugin_nanos.elf

      - name: Upload plugin artifact for Nano S
        uses: actions/upload-artifact@v2
        with:
          name: plugin-artifacts
          path: ./plugin_nanos.elf

  job_build_debug_nano_x:
    name: Build debug Nano X
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build plugin for Nano X
        run: |
          make BOLOS_SDK=$NANOX_SDK DEBUG=1
          mv bin/app.elf plugin_nanox.elf

      - name: Upload plugin artifact for Nano X
        uses: actions/upload-artifact@v2
        with:
          name: plugin-artifacts
          path: ./plugin_nanox.elf

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_coverity_scan:
    name: Coverity Scan
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-scanner:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with cov-build
        run: |
          make clean
          cov-build --dir cov-int make default
      - name: Submit the result to Coverity Scan
        run: |
          tar czvf cov-int.tar.gz cov-int
          curl \
            --form token=$TOKEN \
            --form email=$EMAIL \
            --form file=@cov-int.tar.gz \
            --form version=master \
            --form description="1inch Plugin" \
            https://scan.coverity.com/builds?project=LedgerHQ%2Fapp-plugin-1inch
        env:
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

  jobs-e2e-tests:
    needs: [job_build_debug_nano_s, job_build_debug_nano_x]
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14.4.0"
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build/Install build js deps
        run: |
          cd tests && yarn install
      - name: Download plugin artifacts
        uses: actions/download-artifact@v2
        with:
            path: tests/elfs
      - name: Copy plugin artifacts
        run: |
            mv tests/elfs/plugin-artifacts/*.elf tests/elfs
      - name: Run zemu tests
        run: |
          cd tests && yarn test
