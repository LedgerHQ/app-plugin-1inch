name: Compilation & tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  job_scan_build:
    name: Clang Static Analyzer
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          git config --global --add safe.directory /__w/app-plugin-1inch/app-plugin-1inch
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_coverity_scan:
    name: Coverity Scan
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-scanner:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with cov-build
        run: |
          make clean
          cov-build --dir cov-int make default
      - name: Submit the result to Coverity Scan
        run: |
          tar czvf cov-int.tar.gz cov-int
          curl \
            --form token=$TOKEN \
            --form email=$EMAIL \
            --form file=@cov-int.tar.gz \
            --form version=master \
            --form description="1inch Plugin" \
            https://scan.coverity.com/builds?project=LedgerHQ%2Fapp-plugin-1inch
        env:
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

  job_nano_build:
    name: Build plugin
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          make BOLOS_SDK=${{ matrix.SDK }}

  job_nano_build_testing:
    name: Build plugin for testing
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          make DEBUG=1 BOLOS_SDK=${{ matrix.SDK }}
          mv bin/app.elf plugin_${{ matrix.name }}.elf

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: plugin_${{ matrix.name }}.elf

  job_build_ethereum:
    name: Build Ethereum application for Nano X & S/SP testing
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive

      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=${{ matrix.SDK }} CHAIN=ethereum
      - name: Rename binary
        run: |
          mv bin/app.elf bin/ethereum_${{ matrix.name }}.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ./bin/ethereum_${{ matrix.name }}.elf

  job-e2e-tests:
    name: E2E tests for NanoS, X and S+
    needs: [job_nano_build, job_build_ethereum]
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14.15.0"

      - name: Install yarn
        run: |
          npm install -g yarn

      - name: Install JS dependencies
        run: |
          cd tests && yarn install

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
         name: binaries
         path: tests/elfs

      - name: Run zemu tests
        run: |
          cd tests && yarn test
