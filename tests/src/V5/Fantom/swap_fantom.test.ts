import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "AggregationRouterV5";

const testLabel = "swapV5"; // <= Name of the test
const testDirSuffix = "swap_v5"; // <= directory to compare device snapshots to
const testNetwork = "fantom";
const signedPlugin = false;

const contractAddr = "0x1111111254eeb25477b68fb85ed929f73a960582";
const chainID = 250;

// From : https://ftmscan.com/tx/0x1e6fbd61baae14712734462229f1e14924d67e4b3ffbef3a03ab8e1eeee46580
const inputData = "0x12aa3caf0000000000000000000000008b01d28f4fddd89322711d832325f7eb1f122fb2000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000662b3d319e693aa578edd4bd8a5c9395bc49e9f40000000000000000000000008b01d28f4fddd89322711d832325f7eb1f122fb20000000000000000000000006eac7049e93a1d4ff4d13423ad5f35e54de2b1330000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000091489b86eff8242960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018800000000000000000000000000000000000000000000000000016a00001a404121be370d5312f44cb42ce377bc9b8a0cef1a4c83d0e30db051262aa07920e4ecb4ea8c801d9dfece63875623b28521be370d5312f44cb42ce377bc9b8a0cef1a4c830004f41766d8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000908db5c2b8bbb7eb700000000000000000000000000000000000000000000000000000000000000a00000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000673f4223000000000000000000000000000000000000000000000000000000000000000100000000000000000000000021be370d5312f44cb42ce377bc9b8a0cef1a4c83000000000000000000000000662b3d319e693aa578edd4bd8a5c9395bc49e9f40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f012a792";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 12, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 8, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 8, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>{
        processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork);
    }
);