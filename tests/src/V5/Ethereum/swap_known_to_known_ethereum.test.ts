import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "AggregationRouterV5";

const testLabel = "swapKnownToKnownV5"; // <= Name of the test
const testDirSuffix = "swap_known_to_known_v5"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";
const signedPlugin = false;

const contractAddr = "0x1111111254eeb25477b68fb85ed929f73a960582";
const chainID = 1;

// From : https://etherscan.io/tx/0x33005583e9a49eb363477e9a17eaf8061c01d06ddd67700877ea2b4d7c18679a
const inputData = "0x12aa3caf00000000000000000000000053222470cdcfb8081c0e3a50fd106f0d69e63f20000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000f411903cbc70a74d22900a5de66a2dda6650725500000000000000000000000053222470cdcfb8081c0e3a50fd106f0d69e63f20000000000000000000000000d9408f29026e32852aff8c5c9c8ea834b44b4e1c0000000000000000000000000000000000000000000000000ea5645416280000000000000000000000000000000000000000000000006903037d7f4c49b527c7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ba00000000000000000000000000000000000000000000000000000000019c00a0c9e75c4800000000000000001c1600000000000000000000000000000000000000000000000000016e0000cd00a007e5c0d20000000000000000000000000000000000000000000000000000a900001a4041c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2d0e30db00c20c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260031819a16266d896268cfea5d5be0b6c2b5d756ae4071138002dc6c060031819a16266d896268cfea5d5be0b6c2b5d751111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000002dcd8308d9df1e474cdac02aaa39b223fe8d0a0e5c4f27ead9083c756cc200a007e5c0d200000000000000000000000000000000000000000000000000007d00001a4041c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2d0e30db002a0000000000000000000000000000000000000000000003a434ffde4db2f60b10dee63c1e58198409d8ca9629fbe01ab1b914ebf304175e384c8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21111111254eeb25477b68fb85ed929f73a960582000000000000e26b9977";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 11, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 7, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 7, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>{
        processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork);
    }
);