import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "AggregationRouterV5";

const testLabel = "swapV5"; // <= Name of the test
const testDirSuffix = "swap_v5"; // <= directory to compare device snapshots to
const testNetwork = "arbitrum";
const signedPlugin = false;

const contractAddr = "0x1111111254eeb25477b68fb85ed929f73a960582";
const chainID = 42161;

// From : https://arbiscan.io/tx/0x9467410d493c5abfb4d965f7a8dd703152c1e70783d1268af08ce303ec970ad6
const inputData = "0x12aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000025d887ce7a35172c62febfd67a1856f20faebb00000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000009d15ed61be2206a3350f7d8fb6189783613f51d3000000000000000000000000000000000000000000002aeafdd44d9bad577d7e00000000000000000000000000000000000000000000000000000000003e7ada0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015c00000000000000000000000000000000000000000000013e00006800004e802026678dcd25d887ce7a35172c62febfd67a1856f20faebb0020e1035af2d92986b11ed40e459fc3efa0dda28d000000000000000000000000000000000000000000000036ef5961ab04b4eade0020d6bdbf7825d887ce7a35172c62febfd67a1856f20faebb0000a007e5c0d20000000000000000000000000000000000000000000000000000b200004f02a00000000000000000000000000000000000000000000000000004a3dd5da560f4ee63c1e501224cbc20a8ac043bac4734200e6c247ab1ab605525d887ce7a35172c62febfd67a1856f20faebb0002a000000000000000000000000000000000000000000000000000000000003e7adaee63c1e581b1026b8e7276e7ac75410f1fcbbe21796e8f752682af49447d8a07e3bd95bd0d56f35241523fbab11111111254eeb25477b68fb85ed929f73a960582000000004e5bdafc";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 12, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 8, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 8, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>{
        processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork);
    }
);