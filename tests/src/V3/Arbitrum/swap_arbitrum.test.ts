import {populateTransaction, processTest} from '../../test.fixture';

const contractName = 'AggregationRouterV3';

const testLabel = 'swap';      // <= Name of the test
const testDirSuffix = 'swap';  // <= directory to compare device snapshots to
const testNetwork = 'arbitrum';
const signedPlugin = false;

const contractAddr = '0x11111112542d85b3ef69ae05771c2dccff4faa26';
const chainID = 42161;

// From :
// https://etherscan.io/tx/0x28f440290bb6fb4f1b55af9f8de546acc165e208850a372062751f13f0505577
const inputData =
    '0x7c02520000000000000000000000000064768a3a2453f1e8de9e43e92d65fc36e4c9872d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000180000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb900000000000000000000000010393c20975cf177a3513071bc110f7962cd67da00000000000000000000000064768a3a2453f1e8de9e43e92d65fc36e4c9872d000000000000000000000000f1c78cfe437a73ad44c797799218e18be2bdd1020000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000003ab0760801512e588000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057700000000000000000000000000000000000000000000000000000000053900a007e5c0d20000000000000000000000000000000005150004fb0003ab0002b300029900a0860a32ec0000000000000000000000000000000000000000000000000000000005f5e10000027051201f772fa3bc263160ea09bb16ce1a6b8fc0fab36afd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb900e4f0210929000000000000000000000000000000000000000000000000000000000000002000000000000000000000000082c1eff59c2d51a3a19aadfb6ae372b1d0b5cbc9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064768a3a2453f1e8de9e43e92d65fc36e4c9872d000000000000000000000000940042fd1888e14779e0e9790fef563039f9dbe8000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000005f5cd760000000000000000000000000000000000000000000000000000000064660470000000000000000000000000000000000000000000000000000001882e7f834e0267616e64616c6674686562726f776e67786d786e690018d0189b4eacb8000000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000411f88235e407a77072d06127abcc38bed234d71158d8a1e0e7259e4bcc45785aa2fddad1b2b6e2a878cb36be8460e200b8e2e8574e1481e1c2b02aa3949041c5d1c000000000000000000000000000000000000000000000000000000000012340020d6bdbf78ff970a61a04b1ca14834a43f5de4533ebddb5cc800a0c9e75c4800000000000000001e140000000000000000000000000000000000000000000000000000ca00007b0c20ff970a61a04b1ca14834a43f5de4533ebddb5cc8403b1405d8caffc1cc5032cc82aa135d2481d0cf6ae4071118002625a0403b1405d8caffc1cc5032cc82aa135d2481d0cf000000000000000000000000000000000000000000000000004d47ac12703a5fff970a61a04b1ca14834a43f5de4533ebddb5cc802a000000000000000000000000000000000000000000000000000738dcbf221b7b4ee63c1e500e754841b77c874135caca3386676e886459c2d61ff970a61a04b1ca14834a43f5de4533ebddb5cc85120c873fecbd354f5a56e00e710b90ef4201db2448d82af49447d8a07e3bd95bd0d56f35241523fbab10004ac3893ba0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003a291b05a070bceb500000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000f1c78cfe437a73ad44c797799218e18be2bdd102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000646c9b78000000000000000000000000000000000000000000000000000000000000000200000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000010393c20975cf177a3513071bc110f7962cd67da0020d6bdbf7810393c20975cf177a3513071bc110f7962cd67da0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000cfee7c08';

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: 'nanos',
        label: 'Nano S',
        steps: 12,  // <= Define the number of steps for this test case and this
                    // device
    },
    {
        name: 'nanox',
        label: 'Nano X',
        steps: 8,  // <= Define the number of steps for this test case and this
                   // device
    },
    {
        name: 'nanosp',
        label: 'Nano S+',
        steps: 8,  // <= Define the number of steps for this test case and this
                   // device
    },
    {
        name: 'stax',
        label: 'Stax',
    },
    {
        name: 'flex',
        label: 'Flex',
    }
];

devices.forEach(
    (device) => processTest(
        device, contractName, testLabel, testDirSuffix, '', signedPlugin,
        serializedTx, testNetwork));
