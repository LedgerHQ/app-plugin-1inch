import { processTest, populateTransaction } from "../test.fixture";

const contractName = "AggregationRouterV3";

const testLabel = "swapKnownToKnownV3"; // <= Name of the test
const testDirSuffix = "swap_known_to_known_v3"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x11111112542d85b3ef69ae05771c2dccff4faa26";
const chainID = 137;

// From : https://polygonscan.com/tx/0x0475cfcdb29dfc05fea695e336343aa394bb9a60bcb43010d659347208c5b3f3
const inputData = "0x7c02520000000000000000000000000011431a89893025d2a48dca4eddc396f8c8117187000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001800000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000737da5f520b47cb15af413fdf93f036d83113a1c0000000000000000000000000f6abe2e2fd3344934ee02a15c0e5c870bc298aa0000000000000000000000000000000000000000000000000003dbb61439e00000000000000000000000000000000000000000000000000000000000002e8df700000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ca4b757fed6000000000000000000000000737da5f520b47cb15af413fdf93f036d83113a1c0000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000f42400f6abe2e2fd3344934ee02a15c0e5c870bc298aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bd34b36";

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 10, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 8, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 8, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
